// <auto-generated />
using System;
using Messenger.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Messenger.Migrations
{
    [DbContext(typeof(MessContext))]
    [Migration("20230814105326_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("Messenger.Models.Friends", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("id"));

                    b.Property<int>("Friendid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Friendid");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("Messenger.Models.Messages", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("id"));

                    b.Property<DateTime>("date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("fromid")
                        .HasColumnType("integer");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("toid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("fromid");

                    b.HasIndex("toid");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Messenger.Models.Users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Messenger.Models.Friends", b =>
                {
                    b.HasOne("Messenger.Models.Users", "Friend")
                        .WithMany("friends")
                        .HasForeignKey("Friendid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Friend");
                });

            modelBuilder.Entity("Messenger.Models.Messages", b =>
                {
                    b.HasOne("Messenger.Models.Users", "from")
                        .WithMany()
                        .HasForeignKey("fromid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Messenger.Models.Users", "to")
                        .WithMany()
                        .HasForeignKey("toid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("from");

                    b.Navigation("to");
                });

            modelBuilder.Entity("Messenger.Models.Users", b =>
                {
                    b.Navigation("friends");
                });
#pragma warning restore 612, 618
        }
    }
}
